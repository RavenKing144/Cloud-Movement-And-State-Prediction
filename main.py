# -*- coding: utf-8 -*-
"""lab_project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UY-KJHWTQUhQ0v6aGiH48P69Cap7RkIc
"""

import numpy as np
import matplotlib.pyplot as plt
from PIL import Image 
import pandas as pd
import cv2
from sklearn.cluster import KMeans
import os
import pandas as pd

x=[]
y=[]

def drawImage(img):
  plt.imshow(img)
  plt.show()

def func(img):
  all_pixels = img.reshape((-1,1)) 
  km = KMeans(n_clusters=2)
  km.fit(all_pixels)
  centers = km.cluster_centers_
  print(centers) 
  labels =km.labels_
  labels = labels.reshape((100,100))
  newImage = np.zeros((100,100))
  xint=0
  yint =0
  count=0
  for i in range(100):
    for j in range(100):
      if centers[0]<centers[1]:
        if(labels[i][j]==1):
          newImage[i][j]=1
          xint+=i
          yint+=j
          count+=1
        else:
          newImage[i][j]=0
      else:
        if(labels[i][j]==0):
          newImage[i][j]=1
          xint+=i
          yint+=j
          count+=1
        else:
          newImage[i][j]=0
  print(xint,yint)
  x.append(xint/count)
  y.append(yint/count)
  plt.scatter(xint/count,yint/count,c='blue')
  drawImage(newImage)

dirname = '/content/drive/My Drive/INSAT3D_VIS_India/Train'
timeaccord= []
for fname in os.listdir(dirname):
  timeaccord.append(fname)
timeaccord.sort()
final = []
for fname in timeaccord[:24]:
    img = Image.open(os.path.join(dirname, fname))
    img = img.resize((100,100))
    drawImage(img)
    imarray = np.array(img)
    func(imarray)
    final.append(imarray)

x=np.array(x)
y=np.array(y)
x_predict = []
y_predict = []

for i in range(4):
  x_predict.append(x[i])
  y_predict.append(y[i])

for i in range(3,x.shape[0]):
  dx = x[i-1]-x[i-2]
  xt = x[i-1]+dx
  xat = x[i]
  dx2 = xat - xt
  x_predict.append(xat+dx2)
  dy = y[i-1]-y[i-2]
  yt = y[i-1]+dy
  yat = y[i]
  dy2 = yat - yt
  y_predict.append(yat+dy2)

plt.plot(x, 'r')
plt.plot(x_predict, 'b')
plt.show()
plt.plot(y,'r')
plt.plot(y_predict, 'b')
plt.show()
plt.scatter(x,y)
plt.plot(x,y,'r')
plt.show()
plt.scatter(x_predict,y_predict)
plt.plot(x_predict,y_predict,'b')
plt.show()

plt.scatter(x,y,c="red")
plt.plot(x,y,'blue')
plt.scatter(x_predict[-1],y_predict[-1],c="black")
plt.show()

x_predict2 = []
y_predict2 = []

for i in range(4):
  x_predict2.append(x[i])
  y_predict2.append(y[i])

for i in range(3,x.shape[0]):
  xt = (x[i-1]+x[i-2])/2
  yt = (y[i-1]+y[i-2])/2
  xat = x[i]
  yat = y[i]
  dx = xat-xt
  dy = yat-yt
  xt1 = ((xat+xt)/2)+dx
  yt1 = ((yat+yt)/2)+dy
  x_predict2.append(xt1)
  y_predict2.append(yt1)

plt.plot(x, 'r')
plt.plot(x_predict2, 'b')
plt.show()
plt.plot(y,'r')
plt.plot(y_predict2, 'b')
plt.show()
plt.scatter(x,y)
plt.plot(x,y,'r')
plt.show()
plt.scatter(x_predict2,y_predict2)
plt.plot(x_predict2,y_predict2,'b')
plt.show()

print("Prediction of movement of cluster center\n")
print("Cloud cluster center moves to:",x_predict2[-1],y_predict2[-1])

plt.scatter(x,y,c="red")
plt.plot(x,y,'blue')
plt.scatter(x_predict2[-1],y_predict2[-1],c="black")
plt.show()

data = [[]]
for i in range(x.shape[0]):
  dummy = []
  dummy.append(i)
  dummy.append((x[i],y[i]))
  dummy.append((x_predict[i],y_predict[i]))
  dummy.append((x[i]-x_predict[i],y[i]-y_predict[i]))
  data.append(dummy)

data1 = [[]]
for i in range(x.shape[0]):
  dummy = []
  dummy.append(i)
  dummy.append((x[i],y[i]))
  dummy.append((x_predict2[i],y_predict2[i]))
  dummy.append((x[i]-x_predict2[i],y[i]-y_predict2[i]))
  data1.append(dummy)

df = pd.DataFrame(data, columns = ["Image Number","Actual COM","Predicted COM", "Difference"]) 
df1 = pd.DataFrame(data1, columns = ["Image Number","Actual COM","Predicted COM", "Difference"])

df

df1

s =0
s1=0
sy=0
sy1=0
for i in range(x.shape[0]):
  s+=(x[i]-x_predict[i])**2
  s1+=(x[i]-x_predict2[i])**2
  sy+=(y[i]-y_predict[i])**2
  sy1+=(y[i]-y_predict2[i])**2
print("Mean Square value for algo 1 for x and y coordinates are",s**0.5,sy**0.5)
print("Mean Square value for algo 1 for x and y coordinates are",s1**0.5,sy1**0.5)